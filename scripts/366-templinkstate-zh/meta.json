{
  "name": "TempLinkState.zh",
  "author": "Moosh",
  "added": null,
  "updated": "19 Sep 2022",
  "tags": [
    "#Global",
    "#Library"
  ],
  "rating": "1",
  "downloads": "42",
  "info": "A header for making certain Link effects that are usually permanent temporary. Also allows redrawing Link without using Link Tile Modifier items.",
  "description": "This has been a long time coming really. In the past database scripts that render Link invisible or invincible have had common bugs where the effect doesn't go away under certain circumstances the scripter didn't anticipate. This header sets out to solve this problem in future scripts by tying Link's invisibility, collision detection, and draw/hit offsets to timers that clean up after themselves. I've also thrown in the ability to redraw Link's tiles as well, since that's a very common use for invisibility.\n\nUpdate 4/22/20: Whaddya know, I forgot Link->Z again.\nUpdate 5/4/20: Added Big Link compatibility\nUpdate 6/24/20: Added post waitdraw direction overriding\nUpdate 9/18/22: Added a 2.55 version of the header that writes to ScriptTile instead of the janky redrawing method. Some features of the 2.53 one are missing (CSet, layer) but the essentials are here.",
  "setup": "Combine the TempLinkState_Example global script with your own and set the following constants as needed:TEMPLINKSTATE_PRIORITIZE_LENGTH: If 1, longer timers will take priority when a shorter one is set. Something that sets Link invisible for 60 frames won't overwrite something that sets it for 30 if they overlap.TEMPLINKSTATE_TILE_OVERRIDE_USES_SPRITE: If 1, Link's redrawn tiles use sprites instead of script draws. Might have advantages with certain layer order stuff.TEMPLINKSTATE_TILE_OVERRIDE_FLICKERS: If 1, Link's redrawn tiles will flicker when hit instead of flashing csets 9-6. Use this if you have the \"Invincible Link flickers\" rule enabled.TEMPLINKSTATE_TILE_OVERRIDE_UNHIDE_ON_DEATH: If 1, Link will be made visible again on the frame he died if he's being redrawn. Generally preferable, but there could be reasons you want to handle this yourself.TEMPLINKSTATE_TILE_OVERRIDE_DRAW_DURING_SCROLL: If 1, Link will be drawn while the screen is scrolling. Not compatible with sprite based draws.TEMPLINKSTATE_BIG_LINK: 0 for normal, 1 for 1x2 Link, 2 for 2x2 Link\nFor scripters here's the functions you can use. The ones without a frames argument set the effect for a single frame.\n\nFor turning off Link's collision detection:TempLinkState_UnsetCollDetection(int frames)TempLinkState_UnsetCollDetection()\nFor making Link invisible:TempLinkState_SetInvisible(int frames)TempLinkState_SetInvisible()\nFor setting Link's draw offsets:TempLinkState_SetDrawXOffset(int offset, int frames)TempLinkState_SetDrawXOffset(int offset)TempLinkState_SetDrawYOffset(int offset, int frames)TempLinkState_SetDrawYOffset(int offset)\nFor setting Link's hit offsets:TempLinkState_SetHitXOffset(int offset, int frames)TempLinkState_SetHitXOffset(int offset)TempLinkState_SetHitYOffset(int offset, int frames)TempLinkState_SetHitYOffset(int offset)\nFor overriding Link's tile, base cset, and drawn layer:TempLinkState_SetLinkTileOverride(int tile, int frames)TempLinkState_SetLinkTileOverride(int tile)TempLinkState_SetLinkTileCSetOverride(int tile, int cset, int frames)TempLinkState_SetLinkTileCSetOverride(int tile, int cset)TempLinkState_SetLinkTileCSetLayerOverride(int tile, int cset, int layer, int frames) - Does not work if TEMPLINKSTATE_TILE_OVERRIDE_USES_SPRITE is set.TempLinkState_SetLinkTileCSetLayerOverride(int tile, int cset, int layer)TempLinkState_SetDirOverride(int dir, int frames)TempLinkState_SetDirOverride(int dir)\nRequires std.zh and scrollingDraws.zh.",
  "has_zip": true,
  "has_popup": false
}