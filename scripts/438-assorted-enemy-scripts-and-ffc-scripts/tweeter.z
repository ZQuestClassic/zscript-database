//Constant Walk. Every Nth frame, he jumps. His every Mth jtmp is higher than normal.

//Random rate, hunger, homing factor, step speed are used. If Weapon Damage is >0, this enemy will create explosion after landing every jump. Also explodes on death.

ffc script TweeterSMB2{
	void run(int enemyID){
		npc ghost = Ghost_InitAutoGhost(this, enemyID);
		
		int HF = ghost->Homing;
		int HR = ghost->Haltrate;
		int RR = ghost->Rate;
		int HNG = ghost->Hunger;
		int SPD = ghost->Step;
		int WPND = ghost->WeaponDamage;
		
		int minjump = Ghost_GetAttribute(ghost, 0, 2);//Attribute 0 - normal jump height.
		int maxjump = Ghost_GetAttribute(ghost, 1, 3);//Attribute 1 - max jump height
		int jumpdelay = Ghost_GetAttribute(ghost, 2, 20);//Attribute 2 - delay between jumps, in frames, counted after landing.
		int jumpcount = Ghost_GetAttribute(ghost, 3, 3);//Attribute 3 - every X jump is big one.
		int jumpsfx = Ghost_GetAttribute(ghost, 4, 0);//Jump SFX
		
		//ghost->Extend=3;
		
		Ghost_SetFlag(GHF_NORMAL);
		
		int State = 0;
		int haltcounter = -1;
		int jumpcounter = jumpdelay;
		int jc = jumpcount;
		int OldZ=0;
		
		while(true){
			if (State==0){
				haltcounter = Ghost_ConstantWalk4(haltcounter, SPD, RR, HF, HNG);
				if (jumpcounter<=0 && Ghost_Z==0){
					Game->PlaySound(jumpsfx);
					if (jc==1) Ghost_Jump = maxjump;
					else Ghost_Jump = minjump;
					jc--;
					if (jc==0)jc = jumpcount;
					jumpcounter = jumpdelay;
				}
				else if (Ghost_Z==0){
					if (WPND>0 && OldZ>Ghost_Z){
						eweapon e = FireAimedEWeapon(EW_BOMBBLAST, Ghost_X-16, Ghost_Y+(Ghost_TileHeight-1)*8, 0, 0, WPND, -1, -1, EWF_ROTATE);
					}
					jumpcounter--;
				}
			}
			OldZ=Ghost_Z;
			if (!Ghost_Waitframe(this, ghost, false, false)){
				if (WPND>0) eweapon e = FireAimedEWeapon(EW_SBOMBBLAST, Ghost_X-16, Ghost_Y+(Ghost_TileHeight-1)*8, 0, 0, WPND, -1, -1, EWF_ROTATE);
				Quit();
			}
		}
	}
}