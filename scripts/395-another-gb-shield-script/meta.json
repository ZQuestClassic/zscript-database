{
  "name": "Another GB Shield Script",
  "author": "Demonlink",
  "added": "13 Jul 2021",
  "updated": null,
  "tags": [
    "#2.55",
    "#Global",
    "#Item"
  ],
  "rating": null,
  "downloads": "12",
  "info": "A simple script that mimics the behavior of the shield item from Link's Awakening/Oracle games.",
  "description": "The script has been heavily modified by me, but kudos go to Elmensajero, this was originally written by him way back in 2008. This version is based off another I made personally for my ongoing project, but I said heck, I'll make it public anyway in case things go wrong again. \n\nLike the title states, it's a script that's quite similar to the shield item from the Gameboy Zeldas. Link can strafe and hold the shield in the direction he's facing while the button that the shield is assigned to is pressed.\n\nTwo versions exist, one for 2.55 and another for 2.50. Both behave exactly the same. (Although the X and Y buttons are still buggy as of the latest 2.55 Alpha 92 build).",
  "setup": "First of all, you need to have knowledge about how Link Tile Modifiers work, as this script uses them. A quick example goes as the following: you have your Link sprites setup under Quest->Graphics->Sprites->Link, and by giving him an item with Link Tile Modification, those sprites will change according to the value assigned under the given item's data -> GFX tab; a positive value will increase the sprite's value and a negative one will decrease it.\n\nThe script works with two items, a \"fake\" shield, which is used to draw Link's sprites that are carrying the shield, and the \"real\" shield, that is used to actually defend yourself and that Link holds in front of him. In the demo, for the first shield item you obtain (which is the dummy shield), its LTM value is 260. This means that Link's original sprites will be increased by 260 tiles, thus drawing his sprite that is carrying the shield. However, once you press the button, the script gives you the \"real\" shield item, which has another LTM value of 780. So, now the sprites are increased by another 780 tiles, which are drawn to show Link holding the shield in front of him and actually defending himself. You can see the demo to understand further my explanation.\n\nAs for the actual setup, like I mentioned, you're going to need a \"dummy\" shield for each one that you have because of what I explained in the past paragraph. Create the dummy shield items, and assign them to a custom itemclass, (make sure they all belong to the same class), and assign their levels according to your needs: the small shield would be Level 1, the magic shield would be Level 2, and the mirror shield would be Level 3. Next, assign the item ids of your shields to the following script constants:\n\n//\"Real\" shields:\nconst int GBS_SMALL=93;\nconst int GBS_MAGIC=8;\nconst int GBS_MIRROR=37;\n\n//\"Fake\" shields:\nconst int GBS_FAKESMALL=123; \nconst int GBS_FAKEMAGIC=124;\nconst int GBS_FAKEMIRROR=125;\n\n//A sound that plays when you press the button:\nconst int SFX_GBSHIELD=65;\nCompile the global and item scripts, and assign the included Item script to only the fake shields in the Action slot under the Scripts tab in their item data. Setup the LTM values as well. Now, to make it work, you're only to give the fake shield item to Link, the script handles the rest of the behavior.\n\nNote: If you already have an existing global script, only add the line GBShield(); before Waitdraw(); and then GBShieldDraw(); after it.\n\nAnd that's it, it sounds a bit confusing, but it's really not a big deal. I recommend that you see the demo to fully understand everything. For any questions, leave me a comment.\n\nFor those who are still using 2.53 and below, you can use the 2.50 version of the script that's included, but the demo was made in 2.55.",
  "has_zip": true,
  "has_popup": true
}