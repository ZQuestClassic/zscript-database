const int TILE_PENDULUM_CHAINLINK = 27488; //Default Tile used to render pendulum chain links.

const int TILE_PENDULUM_AXIS = 13454;//Default Tile used to render pendulum axis.

//Sideview Castheania stiyled rideable pendulum swinging platform.
//1. Place FFC anywhere on the screen.
// D0 - Combo location of axis.
// D1 - 1 for or semi-solid block, 2 for fully sold block.
// D2 - Number of links in chain.
// D3 - Swinging acceleration, in degrees per frame.
// D4 - Damage by hitting by underside. Or by entire hitbox, if pendulum is non-solid.
// D5 - Tile used to render axis.
// D6 - Tile used to render chain links.

ffc script SideviewPendulum{
	void run(int axispos, int solidity, int numlinks, int accel, int damageunder, int axistile, int chaintile){
		SetSideviewFFCSolidity(this, solidity);
		int axisx = ComboX(axispos);
		int axisy = ComboY(axispos);
		int linksX[64];
		int linksY[64];
		int length = Distance(CenterX(this), this->Y, axisx, axisy);
		int angle = Angle(axisx, axisy, CenterX(this), this->Y);
		int vel = 0;
		int origdata = this->Data;
		if (axistile==0) axistile = TILE_PENDULUM_AXIS;
		if (chaintile==0) chaintile = TILE_PENDULUM_CHAINLINK;
		
		while(true){
			if (this->Data!=origdata) this->Data = origdata;
			if (angle < 90) vel += accel/100;
			else if (angle> 90) vel -= accel/100;
			angle += vel;
			this->X = axisx + length*Cos(angle) - ((this->EffectWidth)/2);
			this->X+=4;
			this->Y = axisy + length*Sin(angle);
			if (damageunder>0){
				if (RectCollision(LinkX, LinkY, LinkX+15, LinkY+15, this->X, this->Y, (this->X + this->EffectWidth-1), (this->Y + this->EffectHeight))){
					if ((LinkY>CenterY(this))||(solidity==0)){
						ProcessScriptedDamage(damageunder);
					}
				}
			}			
			for (int i=0; i<= numlinks; i++){
				linksX[i] = Lerp(CenterX(this)-8, axisx, (1/(numlinks))*i);
				linksY[i] = Lerp(this->Y-4, axisy, (1/(numlinks)*i));
				Screen->FastTile(0, linksX[i], linksY[i], chaintile, this->CSet, OP_OPAQUE);
			}
			Screen->FastTile(0, axisx, axisy, axistile, this->CSet, OP_OPAQUE);
			Waitframe();
		}
	}
}

//Generic rideable crusher 
//D0 - damage, in 1/16ths of heart
ffc script RideableCrusher{
	void run (int damage){
		SetSideviewFFCSolidity(this, BLOCK_HARD);
		while(true){
			if (RectCollision(LinkX, LinkY, LinkX+15, LinkY+15, this->X, this->Y, (this->X + this->EffectWidth-1), (this->Y + this->EffectHeight))){
				if (CenterLinkY()>CenterY(this)){
					if ((this->Vy)>=6){
						HardCrush(damage,DIR_DOWN);
					}
					else{
						ProcessScriptedDamage(damage);
					}
				}
			}
			Waitframe();
		}
	}
}