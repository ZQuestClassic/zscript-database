{
  "name": "DialogueBox.zh",
  "author": "Moosh",
  "added": null,
  "updated": "18 Apr 2023",
  "tags": [
    "#Library"
  ],
  "rating": "4",
  "downloads": "73",
  "info": "A few functions for handling dialogue boxes. Plus some string reading functions I use with them.Special thanks to Saffith for his Tango.zh font definitions which I reused here.",
  "description": "A few functions for handling dialogue boxes. Plus some string reading functions I use with them.\n\nSpecial thanks to Saffith for his Tango.zh font definitions which I reused here.\n\nUpdate 7/15/18: Apparently either ZScript's power function cannot be trusted or I cannot be trusted with it. Grabbing numbers from strings was breaking if they went into the triple digits. Should be fixed now.\nUpdate 3/26/21: Updated the script to work with multiple line options. If you've used the header prior to this update and are planning on updating, please make a backup of your old DialogueBox.zh file. Some big restructuring had to happen that could potentially break script compatibility.",
  "setup": "First of all, we'll need to set some constants. Other scripts that use this header will use these as defaults. Since these are all quest specific, you'll want multiple copies of this header for each quest that uses it.\n\nGFX:TIL_DB_DIALOGUE_BOX: This is the first of 8 tiles that form the dialogue box. See the included screenshot for how these should be laid out.CS_DB_DIALOGUE_BOX: The CSet of the dialogue box.C_DB_DIALOGUE_BOX_BG: The background color of the dialogue box.TIL_DB_DIALOGUE_SELECTOR: The tile of the dialogue box's selection arrow. This should take up an 8x8 quarter tile in the top left corner instead of a full 16x16 tile.CS_DB_DIALOGUE_SELECTOR: The CSet of the arrow.\nSFX:SFX_DB_MOVECURSOR: Sound when the cursor is moved in the dialogue boxSFX_DB_CONFIRM: Sound when a selection is confirmedSFX_DB_OPEN: Sound of the box openingSFX_DB_CLOSE: Sound of the box closing\nIf you're not a scripter, you're done here. Otherwise, here's the functions you use to put dialogue boxes in your scripts:\n\nint DialogueBox_Run(int x, int y, int strings, int tileDB, int csDB, int colorDB, int font, int cFont, int tileArrow, int csArrow){\nThis function runs until you make a selection and then returns the index of the option you chose.int x, int y: The position of the center point of the dialogue boxint strings[]: An array of strings containing all the options in the dialogue box.int tileDB: The first tile of the dialogue boxint csDB: The CSet of the dialogue boxint colorDB: The background color of the dialogue boxint font: The font used for the dialogue box. This will affect the size.int cFont: The font colorint tileArrow: The tile of the selection arrowint csArrow: The CSet of the selection arrow\nbool DialogueBox_RunSingleFrame(int handler, int x, int y, int strings, int tileDB, int csDB, int colorDB, int font, int cFont, int tileArrow, int csArrow){\nThis function runs every frame inside a while loop. This way you can do other things in your script while the dialogue box is still running. You can either put the function in the condition of the while loop or just check if handler[1]==0. When the while loop is finished, handler[0] will be the index of the selection in the strings[] array.int handler[6]: An empty array that the function stores data in between frames.int x, int y: The position of the center point of the dialogue boxint strings[]: An array of strings containing all the options in the dialogue box.int tileDB: The first tile of the dialogue boxint csDB: The CSet of the dialogue boxint colorDB: The background color of the dialogue boxint font: The font used for the dialogue box. This will affect the size.int cFont: The font colorint tileArrow: The tile of the selection arrowint csArrow: The CSet of the selection arrow\nRequires std.zh.",
  "has_zip": true,
  "has_popup": true
}