const int ICICLE_BLANK_COMBO = 1;
const int ICICLE_RADIUS = 16;
const int ICICLE_DELAY = 2;
const int ICICLE_HEIGHT = 128;
const int ICICLE_SPRITE = 89;
const int ICICLE_IMPACT_SPRITE = 90;
const int ICICLE_SHARD_SPRITE = 91;
const int ICICLE_SHARD_STEP = 200;
const int ICICLE_SHARD_RADIUS = 16;
const int ICICLE_DROP_SOUND = 38;
const int ICICLE_BREAK_SOUND = 44;

ffc script Icicle {

	void run(int icicleDamage, int icicleSpeed) {

		bool hasFallen = false;
		bool icicleComplete = false;

		while(!icicleComplete) {
			
			int LinkX = Link->X + 8;
			int LinkY = Link->Y + 8;
			int thisX = Round(this->X / 8) * 8;
			int thisY = Round(this->Y / 8) * 8;

			// Check if Link is within the icicle's trigger radius and that the icicle has not yet fallen
			if(!hasFallen && (Pow((LinkX - thisX), 2) + Pow((LinkY - thisY), 2) < Pow(ICICLE_RADIUS, 2))) {

				hasFallen = true;
				
				// Short delay before Icicle actually falls
				Waitframes(ICICLE_DELAY);

				//Play sound effect
				Game->PlaySound(ICICLE_DROP_SOUND);

				//Create lweapon and place it at the top of the screen
				lweapon icicle = Screen->CreateLWeapon(LW_SCRIPT1);
				icicle->UseSprite(ICICLE_SPRITE);
				icicle->DeadState = WDS_ALIVE;
				icicle->CollDetection = false;
				icicle->X = thisX;
				icicle->Y = thisY;
				icicle->Z = ICICLE_HEIGHT;

				while(!icicleComplete) {

					icicle->Z -= icicleSpeed;

					// Wait for icicle to reach the ground
					if(icicle->Z <= 0) {
						// Hide this combo and destroy the icicle
						this->Data = ICICLE_BLANK_COMBO;
						icicle->DeadState = WDS_DEAD;

						icicleComplete = true;
					}
					Waitframe();
				}

				// Create impact effect
				Game->PlaySound(ICICLE_BREAK_SOUND);
				lweapon impact = Screen->CreateLWeapon(LW_SPARKLE);
				impact->UseSprite(ICICLE_IMPACT_SPRITE);
				impact->X = thisX;
				impact->Y = thisY;
				impact->DeadState = WDS_ALIVE;

				// Create 8 "shards" to send out in all directions
				eweapon shards[8];
				for(int i = 0; i < 8; i++){
					shards[i] = Screen->CreateEWeapon(EW_ROCK);
					shards[i]->UseSprite(ICICLE_SHARD_SPRITE);
					shards[i]->X = thisX;
					shards[i]->Y = thisY;
					shards[i]->DeadState = WDS_ALIVE;
					shards[i]->CollDetection = true;
					shards[i]->Damage = icicleDamage;
					shards[i]->Angular = true;
					shards[i]->Angle = (45 * i) * (PI / 180);
					shards[i]->Step = ICICLE_SHARD_STEP;
				}

				bool shardsDead = false;

				// Destroy the shards once they're far enough away from their origin
				while(!shardsDead) {
					if(Distance(thisX, thisY, shards[0]->X, shards[0]->Y) > ICICLE_SHARD_RADIUS) {
						for(int i = 0; i < 8; i++){
							shards[i]->DeadState = WDS_DEAD;
						}
						shardsDead = true;
					}
					Waitframe();
				}
			}
			Waitframe();
		}
	}
}